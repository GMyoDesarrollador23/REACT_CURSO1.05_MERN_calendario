{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","router/PublicRoute.js","router/PrivateRoute.js","helpers/fetch.js","actions/auth.js","helpers/prepereEvents.js","actions/event.js","components/ui/NavBar.js","actions/ui.js","components/ui/AddNewFab.js","components/calentar/CalendarModa.js","components/calentar/CalendarEvevt.js","components/ui/DeleteEventFab.js","helpers/calendar-messages-es.js","components/calentar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","incitialState","events","activeEvent","checking","rootReducers","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","baseURL","process","fetchSinToken","endPoint","data","method","url","console","log","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","Logout","prepereevents","end","moment","toDate","start","eventClearActiveNote","eventAddNew","event","eventLoaded","eventUpdate","eventDeleted","NavBar","name","useSelector","dispatch","useDispatch","className","onClick","clear","eventLogout","uiOpenModal","AddNewFab","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","nowStart","minutes","second","add","nowEnd","clone","initEvent","title","notes","CalendarModa","useState","formValues","setformValues","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","settitleValid","useEffect","handleInputchange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","resp","json","ok","msg","error","getState","uid","evento","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","CalendarEvevt","DeleteEventFab","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","dipatch","eventos","startAccessor","endAccessor","eventPropGetter","isSelcted","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","useForm","values","setValues","reset","handleInputChange","LoginScreen","lEmail","lPassword","FormLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","FormRegisterValues","handleRegisterInputChange","email","password","Date","getTime","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c231e5f.chunk.js","sourcesContent":["export const types = {\r\n   uiOpenModal: \"[ui] Open modal\",\r\n   uiCleseModal: \"[ui] Close modal\",\r\n\r\n   \r\n   eventLogout: \"[event] Event logout\",\r\n   eventStartAddNew: \"[event] Stat add New\",\r\n   eventSetActive: \"[event] Set Active\",\r\n   eventAddNew: \"[event] Add New\",\r\n   eventClearActiveEvent: \"[event] Clear Active event\",\r\n   eventUpdated: \"[event] Event Update\",\r\n   eventDeleted: \"[event] Event delete\",\r\n   eventLoaded: \"[event] Event loaded\",\r\n   \r\n   \r\n\r\n   authCheckingFinish: \"[Auth] Finish Checking login state\",\r\n   authStartLogin: \"[Auth] Start Login\",\r\n   authLogin: \"[Auth] Login\",\r\n   authStartRegister: \"[Auth] Start Register\",\r\n   authStartTokenRenew: \"[Auth] Start Token Renew\",\r\n   authLogout: \"[Auth] Start Logout\",\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   modalOpen: false,\r\n};\r\n\r\n// Reducer encargado de majejar si el modal se abre o se cierra\r\nexport const uiReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.uiOpenModal:\r\n         return { ...state, modalOpen: true };\r\n\r\n      case types.uiCleseModal:\r\n         return { ...state, modalOpen: false };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//    id: ,\r\n//    title: \"Cumple del jefe\",\r\n//    start: moment().toDate(),\r\n//    end: moment().add(2, \"hour\").toDate(),\r\n//    notes: \"\",\r\n//    user: {\r\n//       _id: \"\",\r\n//       name: \"\",\r\n//    },\r\n// },\r\n\r\n// evento de preuba\r\nconst incitialState = {\r\n   events: [],\r\n   activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (\r\n   state = incitialState,\r\n   action\r\n) => {\r\n   switch (action.type) {\r\n      case types.eventSetActive:\r\n         return { ...state, activeEvent: action.payload };\r\n\r\n      case types.eventAddNew:\r\n         return {\r\n            ...state,\r\n            events: [...state.events, action.payload],\r\n         };\r\n\r\n      case types.eventClearActiveEvent:\r\n         return {\r\n            ...state,\r\n            activeEvent: null,\r\n         };\r\n      case types.eventUpdated:\r\n         return {\r\n            ...state,\r\n            events: state.events.map((e) =>\r\n               e.id === action.payload.id\r\n                  ? action.payload\r\n                  : e\r\n            ),\r\n         };\r\n\r\n      case types.eventDeleted:\r\n         return {\r\n            ...state,\r\n            events: state.events.filter(\r\n               (e) => e.id !== state.activeEvent.id\r\n            ),\r\n            activeEvent: null,\r\n         };\r\n\r\n      case types.eventLoaded:\r\n         return {\r\n            ...state,\r\n            events: [...action.payload],\r\n         };\r\n\r\n      case types.authLogout:\r\n         return {\r\n           ...incitialState\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   checking: true,\r\n   // uid:null,\r\n   // name:null\r\n};\r\n\r\nexport const authReducer = (\r\n   state = initialState,\r\n   action\r\n) => {\r\n   switch (action.type) {\r\n      case types.authLogin:\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authCheckingFinish:\r\n         return {\r\n            ...state,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authLogout:\r\n         return {\r\n            checking: false,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n// *********************************************\r\n\r\n// controlador de los reducers\r\nexport const rootReducers = combineReducers({\r\n   ui: uiReducer,\r\n   calendar: calendarReducer,\r\n   auth: authReducer,\r\n});\r\n","import {\r\n   createStore,\r\n   compose,\r\n   applyMiddleware,\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducers } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers =\r\n   (typeof window !== \"undefined\" &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n   compose;\r\n\r\n// MANEJO DEL ESTADO DE LA APP\r\n// fuente de la verdad\r\nexport const store = createStore(\r\n   rootReducers,\r\n   composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n   return (\n      <Route\n         {...rest}\n         component={(props) =>\n            isAuthenticated ? (\n               <Redirect to=\"/\" />\n            ) : (\n               <Component {...props} />\n            )\n         }\n      />\n   );\n};\n\nPublicRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n   return (\n      <Route\n         {...rest}\n         component={(props) =>\n            isAuthenticated ? (\n               <Component {...props} />\n            ) : (\n               <Redirect to=\"/login\" />\n            )\n         }\n      />\n   );\n};\n\nPrivateRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component: PropTypes.func.isRequired,\n};\n","const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endPoint, data, method = \"GET\") => {\r\n   const url = `${baseURL}/${endPoint}`;\r\n   console.log(url);\r\n   if (method === \"GET\") {\r\n      return fetch(url);\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            \"Content-type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nconst fetchConToken = (endPoint, data, method = \"GET\") => {\r\n   const url = `${baseURL}/${endPoint}`;\r\n\r\n   const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n   if (method === \"GET\") {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            \"x-token\": token,\r\n         },\r\n      });\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            \"Content-type\": \"application/json\",\r\n            \"x-token\": token,\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import { types } from \"../types/types\";\r\nimport {\r\n   fetchSinToken,\r\n   fetchConToken,\r\n} from \"../helpers/fetch\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// verifica la autentificacion\r\nexport const startLogin = (email, password) => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchSinToken(\r\n         \"auth\",\r\n         { email, password },\r\n         \"POST\"\r\n      );\r\n\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         // gravear el token y la hora en el localStorage\r\n         localStorage.setItem(\"token\", body.token);\r\n         localStorage.setItem(\r\n            \"token-init-date\",\r\n            new Date().getTime()\r\n         );\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n   };\r\n};\r\n\r\n// registrar nuevo usuario\r\nexport const startRegister = (email, password, name) => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchSinToken(\r\n         \"auth/new\",\r\n         {\r\n            email,\r\n            password,\r\n            name,\r\n         },\r\n         \"POST\"\r\n      );\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         localStorage.setItem(\"token\", body.token);\r\n         localStorage.setItem(\r\n            \"token-init-date\",\r\n            new Date().getTime()\r\n         );\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n   };\r\n};\r\n// revalidar el token\r\nexport const startChecking = () => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchConToken(\"auth/renew\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         localStorage.setItem(\"token\", body.token);\r\n         localStorage.setItem(\r\n            \"token-init-date\",\r\n            new Date().getTime()\r\n         );\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         dispatch(checkingFinish());\r\n      }\r\n   };\r\n};\r\n\r\nexport const startLogout = () => {\r\n   return (dispatch) => {\r\n      localStorage.clear();\r\n      dispatch(Logout());\r\n   };\r\n}; \r\n// -------------------------------------------\r\nconst checkingFinish = () => ({\r\n   type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n   type: types.authLogin,\r\n   payload: user,\r\n});\r\n\r\nconst Logout = () => ({\r\n   type: types.authLogout,\r\n});\r\n","import moment from \"moment\";\r\n\r\nexport const prepereevents = (events = []) => {\r\n   return events.map((e) => ({\r\n      ...e,\r\n      end: moment(e.end).toDate(),\r\n      start: moment(e.start).toDate(),\r\n   }));\r\n};\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepereevents } from \"../helpers/prepereEvents\";\r\n\r\n// resiveir el evento activo\r\nexport const eventSetActive = (event) => ({\r\n   type: types.eventSetActive,\r\n   payload: event,\r\n});\r\n\r\n// limpiar nota activa\r\nexport const eventClearActiveNote = () => ({\r\n   type: types.eventClearActiveEvent,\r\n});\r\n\r\n// purgar la nota activa cuado el usuario cierra cesion\r\nexport const eventLogout = () => ({\r\n   type: eventLogout,\r\n});\r\n\r\n\r\n// POST -> CREATE\r\nexport const eventStartAddNew = (event) => {\r\n   return async (dispatch, getState) => {\r\n      const { uid, name } = getState().auth;\r\n\r\n      try {\r\n         // enviar el evento al backend\r\n         const resp = await fetchConToken(\r\n            \"events\",\r\n            event,\r\n            \"POST\"\r\n         );\r\n         const body = await resp.json();\r\n\r\n         if (body.ok) {\r\n            // aniadir el id y el usuario\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n               _id: uid,\r\n               name,\r\n            };\r\n\r\n            // dispara el evento\r\n            dispatch(eventAddNew(event));\r\n         }\r\n      } catch (error) {\r\n         console.error(error);\r\n      }\r\n   };\r\n};\r\n\r\n// GET -> READ\r\nexport const eventStartLoading = () => {\r\n   return async (dipatch) => {\r\n      try {\r\n         // recuperando los eventos de la base de datos\r\n         const resp = await fetchConToken(\"events\");\r\n         const body = await resp.json();\r\n         const events = prepereevents(body.eventos);\r\n\r\n         // console.log(events);\r\n\r\n         dipatch(eventLoaded(events));\r\n      } catch (error) {\r\n         console.error(error);\r\n      }\r\n   };\r\n};\r\n\r\n// PUT -> UPDATE\r\nexport const eventsStartUpdate = (event) => {\r\n   return async (dispatch) => {\r\n      try {\r\n         // console.log(event);\r\n         const resp = await fetchConToken(\r\n            `events/${event.id}`,\r\n            event,\r\n            \"PUT\"\r\n         );\r\n         const body = await resp.json();\r\n         if (body.ok) {\r\n            dispatch(eventUpdate(event));\r\n         } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n         }\r\n      } catch (error) {\r\n         console.error(error);\r\n      }\r\n   };\r\n};\r\n\r\n// DELETE\r\nexport const eventsStartDelete = () => {\r\n   return async (dispatch, getState) => {\r\n      const { activeEvent } = getState().calendar;\r\n      try {\r\n         const resp = await fetchConToken(\r\n            `events/${activeEvent.id}`,\r\n            {},\r\n            \"DELETE\"\r\n         );\r\n         const body = await resp.json();\r\n         if (body.ok) {\r\n            dispatch(eventDeleted());\r\n         } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n         }\r\n      } catch (error) {\r\n         console.error(error);\r\n      }\r\n   };\r\n};\r\n// ---------------------------------------------------------\r\n\r\n// aniadir nuevo evento\r\nconst eventAddNew = (event) => ({\r\n   type: types.eventAddNew,\r\n   payload: event,\r\n});\r\n\r\n// cargar Eventos\r\nconst eventLoaded = (events) => ({\r\n   type: types.eventLoaded,\r\n   payload: events,\r\n});\r\n\r\n// actualizar nota activa\r\nconst eventUpdate = (event) => ({\r\n   type: types.eventUpdated,\r\n   payload: event,\r\n});\r\n\r\n// eliminar nota activa\r\nconst eventDeleted = () => ({\r\n   type: types.eventDeleted,\r\n});\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { eventLogout } from \"../../actions/event\";\r\n\r\nexport const NavBar = () => {\r\n   const { name } = useSelector((state) => state.auth);\r\n   const dispatch = useDispatch();\r\n   \r\n   const handleLogout = () => {\r\n      dispatch(startLogout());\r\n      dispatch(eventLogout())\r\n   };\r\n   return (\r\n      <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n         <span className=\"navbar-brand\">{name}</span>\r\n\r\n         <button\r\n            className=\"btn btn-outline-danger\"\r\n            onClick={handleLogout}\r\n         >\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            <span> Salir</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// abrir modal\r\nexport const uiOpenModal = () => ({\r\n   type: types.uiOpenModal,\r\n});\r\n\r\n// cerrar modal\r\nexport const uiCleseModal = () => ({\r\n   type: types.uiCleseModal,\r\n});\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n// ******************************************************\r\nexport const AddNewFab = () => {\r\n   // -------------------------------------------------\r\n   const dispatch = useDispatch();\r\n\r\n   const handleOpenModal = () => {\r\n      dispatch(uiOpenModal());\r\n   };\r\n   // -------------------------------------------------\r\n   return (\r\n      <button\r\n         className=\"btn btn-outline-primary fab\"\r\n         onClick={handleOpenModal}\r\n      >\r\n         <i className=\"fas fa-plus\"></i>\r\n      </button>\r\n   );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { uiCleseModal } from \"../../actions/ui\";\r\nimport {\r\n   eventClearActiveNote,\r\n   eventStartAddNew,\r\n   eventsStartUpdate,\r\n} from \"../../actions/event\";\r\n\r\n// ***********************************************************\r\n\r\n// estilos la ventana delmodal\r\nconst customStyles = {\r\n   content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n   },\r\n};\r\n\r\n// enlace al root\r\nModal.setAppElement(\"#root\");\r\n\r\n// hora de inicio y de fin\r\nconst nowStart = moment()\r\n   .minutes(0)\r\n   .second(0)\r\n   .add(1, \"hours\");\r\nconst nowEnd = nowStart.clone().add(1, \"hours\");\r\n\r\n// evento nuevo basio\r\nconst initEvent = {\r\n   title: \"\",\r\n   notes: \"\",\r\n   start: nowStart.toDate(),\r\n   end: nowEnd.toDate(),\r\n};\r\n\r\n// ***********************************************************\r\nexport const CalendarModa = () => {\r\n   // ------------------------------------------------------\r\n\r\n   const dispatch = useDispatch();\r\n   const { modalOpen } = useSelector((state) => state.ui);\r\n   const { activeEvent } = useSelector(\r\n      (state) => state.calendar\r\n   );\r\n\r\n   const [formValues, setformValues] = useState(initEvent);\r\n   // hora de inicio\r\n   const [dateStart, setdateStart] = useState(\r\n      nowStart.toDate()\r\n   );\r\n   const [dateEnd, setdateEnd] = useState(nowEnd.toDate());\r\n   const [titleValid, settitleValid] = useState(true);\r\n\r\n   const { title, notes, start, end } = formValues;\r\n\r\n   useEffect(() => {\r\n      if (activeEvent) {\r\n         setformValues(activeEvent);\r\n      } else {\r\n         setformValues(initEvent);\r\n      }\r\n   }, [activeEvent, setformValues]);\r\n\r\n   const handleInputchange = ({ target }) => {\r\n      setformValues({\r\n         ...formValues,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   // cerrar modal\r\n   const closeModal = () => {\r\n      setformValues(initEvent);\r\n      dispatch(uiCleseModal());\r\n      dispatch(eventClearActiveNote());\r\n   };\r\n\r\n   const handleStartDateChange = (e) => {\r\n      // ingresar hora de inicio\r\n      setdateStart(e);\r\n      setformValues({ ...formValues, start: e });\r\n   };\r\n\r\n   const handleEndDateChange = (e) => {\r\n      // ingresar hora de fin\r\n      setdateEnd(e);\r\n      setformValues({ ...formValues, end: e });\r\n   };\r\n\r\n   // *********** ENVIO DEL EVENTO ***********\r\n   const handleSubmitFom = (e) => {\r\n      e.preventDefault();\r\n\r\n      // montar las fechas de inicio y final a formato de moment\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n      // validar que la fecha de fin sea mayor a la de inicio\r\n      if (momentStart.isSameOrAfter(momentEnd)) {\r\n         return Swal.fire(\r\n            \"Error\",\r\n            \"La fecha final debe de ser mayor a la fecha de inicio\",\r\n            \"error\"\r\n         );\r\n      } else if (title.trim().length < 2) {\r\n         // verificar que el titulo del evento sea valido\r\n         return settitleValid(false);\r\n      }\r\n\r\n      //aniadir o actualizar un evento\r\n      if (activeEvent) {\r\n         dispatch(eventsStartUpdate(formValues));\r\n      } else {\r\n         dispatch(eventStartAddNew(formValues));\r\n      }\r\n\r\n      settitleValid(true);\r\n      closeModal();\r\n   };\r\n   // ------------------------------------------------------\r\n   return (\r\n      <Modal\r\n         isOpen={modalOpen}\r\n         onRequestClose={closeModal}\r\n         style={customStyles}\r\n         closeTimeoutMS={200}\r\n         className=\"modal\"\r\n         overlayClassName=\"modal-fondo\"\r\n      >\r\n         <h1>\r\n            {activeEvent ? \"Editar evento\" : \"Nuevo Evento\"}\r\n         </h1>\r\n         <hr />\r\n         <form\r\n            className=\"container\"\r\n            onSubmit={handleSubmitFom}\r\n         >\r\n            <div className=\"form-group\">\r\n               <label>Fecha y hora inicio</label>\r\n               <DateTimePicker\r\n                  onChange={handleStartDateChange}\r\n                  value={dateStart}\r\n                  className=\"form-control\"\r\n               />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <label>Fecha y hora fin</label>\r\n               <DateTimePicker\r\n                  onChange={handleEndDateChange}\r\n                  value={dateEnd}\r\n                  minDate={dateStart}\r\n                  className=\"form-control\"\r\n               />\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n               <label>Titulo y notas</label>\r\n               <input\r\n                  type=\"text\"\r\n                  className={`form-control ${\r\n                     !titleValid && \"is-invalid\"\r\n                  }`}\r\n                  placeholder=\"Título del evento\"\r\n                  name=\"title\"\r\n                  autoComplete=\"off\"\r\n                  value={title}\r\n                  onChange={handleInputchange}\r\n               />\r\n               <small\r\n                  id=\"emailHelp\"\r\n                  className=\"form-text text-muted\"\r\n               >\r\n                  Una descripción corta\r\n               </small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Notas\"\r\n                  rows=\"5\"\r\n                  name=\"notes\"\r\n                  value={notes}\r\n                  onChange={handleInputchange}\r\n               ></textarea>\r\n               <small\r\n                  id=\"emailHelp\"\r\n                  className=\"form-text text-muted\"\r\n               >\r\n                  Información adicional\r\n               </small>\r\n            </div>\r\n\r\n            <button\r\n               type=\"submit\"\r\n               className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n               <i className=\"far fa-save\"></i>\r\n               <span> Guardar</span>\r\n            </button>\r\n         </form>\r\n      </Modal>\r\n   );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CalendarEvevt = ({ event }) => {\r\n   const { title, user } = event;\r\n   return (\r\n      <div>\r\n         <strong>{title}</strong>\r\n         <strong>-{user.name}</strong>\r\n      </div>\r\n   );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventsStartDelete } from \"../../actions/event\";\r\n\r\nexport const DeleteEventFab = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleDelete = () => {\r\n      dispatch(eventsStartDelete());\r\n   };\r\n\r\n   return (\r\n      <button\r\n         className=\"btn btn-outline-danger fab-danger\"\r\n         onClick={handleDelete}\r\n      >\r\n         <i className=\"fas fa-trash\"></i>\r\n         <span> Eliminar Evento</span>\r\n      </button>\r\n   );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport \"moment/locale/es\";\r\nimport moment from \"moment\";\r\nimport {\r\n   Calendar,\r\n   momentLocalizer,\r\n} from \"react-big-calendar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nimport { NavBar } from \"../ui/NavBar\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { CalendarModa } from \"./CalendarModa\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { CalendarEvevt } from \"./CalendarEvevt\";\r\nimport {\r\n   eventSetActive,\r\n   eventClearActiveNote,\r\n   eventStartLoading,\r\n} from \"../../actions/event\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// **********************************************************\r\nexport const CalendarScreen = () => {\r\n   // ------------------------------------------------------\r\n   const { uid } = useSelector((state) => state.auth);\r\n   const { events, activeEvent } = useSelector(\r\n      (state) => state.calendar\r\n   );\r\n   const dispatch = useDispatch();\r\n   const [lastView, setlastView] = useState(\r\n      localStorage.getItem(\"lastView\")\r\n   );\r\n   \r\n   useEffect(() => {\r\n      // llamando los evento cuando estos cambien\r\n      dispatch(eventStartLoading());\r\n   }, [dispatch]);\r\n\r\n   // ------------------------------------------------------\r\n   const onDobleClick = () => {\r\n      // abrir el moodal\r\n      dispatch(uiOpenModal());\r\n   };\r\n\r\n   const onSelectevent = (e) => {\r\n      // activar el evento seccionado\r\n      dispatch(eventSetActive(e));\r\n   };\r\n\r\n   const onViewChange = (e) => {\r\n      // guardar en el localStorge la ultima vista\r\n      setlastView(e);\r\n      localStorage.setItem(\"lastView\", e);\r\n   };\r\n\r\n   // estilos de los eventos\r\n   const eventStyleGetter = (\r\n      event,\r\n      start,\r\n      end,\r\n      isSelcted\r\n   ) => {\r\n      // console.log(event, start, end, isSelcted);\r\n\r\n      const style = {\r\n         backgroundColor:\r\n            uid === event.user._id ? \"#367cf7\" : \"#465660\",\r\n         borderRadius: \"0px\",\r\n         opacity: 0.8,\r\n         display: \"block\",\r\n         color: \"white\",\r\n      };\r\n      return { style };\r\n   };\r\n\r\n   const onSelectSlot = () => {\r\n      dispatch(eventClearActiveNote());\r\n   };\r\n   // --------------------------------------------------------\r\n   return (\r\n      <div className=\"calendar-scren\">\r\n         <NavBar />\r\n\r\n         <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            messages={messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={onDobleClick}\r\n            onSelectEvent={onSelectevent}\r\n            onView={onViewChange}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            view={lastView || \"month\"}\r\n            components={{ event: CalendarEvevt }}\r\n         />\r\n\r\n         <AddNewFab />\r\n\r\n         {activeEvent && <DeleteEventFab />}\r\n\r\n         <CalendarModa />\r\n      </div>\r\n   );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   const [values, setValues] = useState(initialState);\r\n\r\n   const reset = () => {\r\n      setValues(initialState);\r\n   };\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setValues({\r\n         ...values,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport \"./login.css\";\r\n\r\nimport {\r\n   startLogin,\r\n   startRegister,\r\n} from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n// ********************************************\r\n\r\nexport const LoginScreen = () => {\r\n   // Login-------------------------\r\n   const dispatch = useDispatch();\r\n   const [\r\n      FormLoginValues,\r\n      handleLoginInputChange,\r\n   ] = useForm({\r\n      lEmail: \"Pruaba@algo.com\",\r\n      lPassword: \"123456\",\r\n   });\r\n   const { lEmail, lPassword } = FormLoginValues;\r\n\r\n   // -----Register\r\n   const [\r\n      FormRegisterValues,\r\n      handleRegisterInputChange,\r\n   ] = useForm({\r\n      rName: \"alvert\",\r\n      rEmail: \"Pruaba@algoAlgo1.com\",\r\n      rPassword: \"123456\",\r\n      rPassword2: \"123456\",\r\n   });\r\n   const {\r\n      rName,\r\n      rEmail,\r\n      rPassword,\r\n      rPassword2,\r\n   } = FormRegisterValues;\r\n\r\n   // --------------------------------------\r\n   const handleLogin = (e) => {\r\n      e.preventDefault();\r\n      dispatch(startLogin(lEmail, lPassword));\r\n   };\r\n\r\n   const handleregister = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (rPassword !== rPassword2) {\r\n         return Swal.fire(\r\n            \"Error\",\r\n            \"Las Contrasenias deben de ser iguales\",\r\n            \"error\"\r\n         );\r\n      }\r\n      dispatch(startRegister(rEmail, rPassword, rName));\r\n   };\r\n\r\n   // --------------------------------------\r\n   return (\r\n      <div className=\"container login-container\">\r\n         <div className=\"row\">\r\n            <div className=\"col-md-6 login-form-1\">\r\n               <h3>Ingreso</h3>\r\n               <form onSubmit={handleLogin}>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Correo\"\r\n                        name=\"lEmail\"\r\n                        value={lEmail}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Contraseña\"\r\n                        name=\"lPassword\"\r\n                        value={lPassword}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"submit\"\r\n                        className=\"btnSubmit\"\r\n                        value=\"Login\"\r\n                     />\r\n                  </div>\r\n               </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 login-form-2\">\r\n               <h3>Registro</h3>\r\n               <form onSubmit={handleregister}>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nombre\"\r\n                        name=\"rName\"\r\n                        value={rName}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Correo\"\r\n                        name=\"rEmail\"\r\n                        value={rEmail}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Contraseña\"\r\n                        name=\"rPassword\"\r\n                        value={rPassword}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Repita la contraseña\"\r\n                        name=\"rPassword2\"\r\n                        value={rPassword2}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"submit\"\r\n                        className=\"btnSubmit\"\r\n                        value=\"Crear cuenta\"\r\n                     />\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n   BrowserRouter as Router,\r\n   Switch,\r\n   Redirect,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { CalendarScreen } from \"../components/calentar/CalendarScreen\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\n// ********************************************************\r\n\r\nexport const AppRouter = () => {\r\n   const dispatch = useDispatch();\r\n   const { checking, uid } = useSelector(\r\n      (state) => state.auth\r\n   );\r\n\r\n   useEffect(() => {\r\n      dispatch(startChecking()); \r\n   }, [dispatch]);\r\n\r\n   if (checking) {\r\n      return <h1>Espere...</h1>;\r\n   }\r\n\r\n   return (\r\n      <Router>\r\n         <div>\r\n            <Switch>\r\n               <PublicRoute\r\n                  exact\r\n                  path=\"/login\"\r\n                  isAuthenticated={!!uid}\r\n                  component={LoginScreen}\r\n               />\r\n               <PrivateRoute\r\n                  exact\r\n                  isAuthenticated={!!uid}\r\n                  path=\"/\"\r\n                  component={CalendarScreen}\r\n               />\r\n               <Redirect to=\"/\" />\r\n            </Switch>\r\n         </div>\r\n      </Router>\r\n   );\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./store/store\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\n\r\n// ***********************************************************\r\nexport const CalendarApp = () => {\r\n   return (\r\n      <Provider store={store}>\r\n         <AppRouter />\r\n      </Provider>\r\n   );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport  './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}